/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/summary": {
    /** Returns summary about cyclist and rides */
    get: operations["getSummary"];
  };
  "/statistics": {
    /** Returns detailed statistics about cyclist and rides */
    get: operations["getStatistics"];
  };
  "/oauth/token": {
    /** Request an OAuth 2.0 token by providing an authorization code */
    post: operations["postToken"];
  };
}

export interface components {
  schemas: {
    /** @description Information about the cyclist */
    Cyclist: {
      firstName?: string;
      lastName?: string;
      sex?: string;
      location?: string;
      ftp?: number;
      weight?: number;
      profileUrl?: string;
      measurement?: components["schemas"]["MeasurementUnit"];
      longestRide?: number;
      highestClimb?: number;
    };
    /** @description Distance entry for a given month */
    DistancePerMonth: {
      month: number;
      year: number;
      distance: number;
    };
    /** @description Detailed statistics about cyclist and rides */
    Statistics: {
      /** @description Distance ridden per month */
      distancesPerMonth?: components["schemas"]["DistancePerMonth"][];
    };
    /** @description Summary info about cyclist and rides */
    Summary: {
      cyclist?: components["schemas"]["Cyclist"];
    };
    /**
     * @description Indicates if imperial or metric units are used
     * @enum {string}
     */
    MeasurementUnit: "IMPERIAL" | "METRIC";
  };
}

export interface operations {
  /** Returns summary about cyclist and rides */
  getSummary: {
    responses: {
      /** success */
      200: {
        content: {
          "application/json": components["schemas"]["Summary"];
        };
      };
    };
  };
  /** Returns detailed statistics about cyclist and rides */
  getStatistics: {
    responses: {
      /** success */
      200: {
        content: {
          "application/json": components["schemas"]["Statistics"];
        };
      };
    };
  };
  /** Request an OAuth 2.0 token by providing an authorization code */
  postToken: {
    parameters: {
      query: {
        /** Authorization code used for requesting the OAuth 2.0 token */
        code: unknown;
      };
    };
    responses: {
      /** created */
      201: {
        content: {
          "application/json": {
            bearerToken?: string;
          };
        };
      };
    };
  };
}

export interface external {}
